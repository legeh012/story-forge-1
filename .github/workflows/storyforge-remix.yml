name: StoryForge Remix Pipeline

on:
  push:
    branches:
      - main
      - chaos-edits
      - cast-overlays
  pull_request:
    branches:
      - main

env:
  SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
  SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}

jobs:
  remix-on-push:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/chaos-edits' || github.ref == 'refs/heads/cast-overlays'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: Trigger Remix Bot
        run: |
          echo "ðŸ”„ Auto-triggering remix on branch: ${{ github.ref_name }}"
          curl -X POST "${{ secrets.SUPABASE_URL }}/functions/v1/remix-bot" \
            -H "Authorization: Bearer ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}" \
            -H "Content-Type: application/json" \
            -d '{
              "branch": "${{ github.ref_name }}",
              "commit": "${{ github.sha }}",
              "remixTypes": ["meme", "duet", "reaction"],
              "autoTrigger": true
            }'

      - name: Sync to StoryForge Database
        run: |
          echo "ðŸ’¾ Syncing remix metadata to database"
          # Add database sync logic here

  deploy-main:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy to Production
        run: |
          echo "ðŸš€ Deploying main branch to production"
          # Production deployment logic

  notify-cast:
    runs-on: ubuntu-latest
    needs: [remix-on-push]
    if: always()
    
    steps:
      - name: Send Cast Notification
        run: |
          echo "ðŸ“¢ Notifying cast of new remix: ${{ github.ref_name }}"
          # Real-time notification via Supabase Realtime
